DROP TABLE IF EXISTS COZINHEIRO_FAZ_TORTA, FUNCIONARIO_ORGANIZA_ESTOQUE,
INGREDIENTE, ITEM_DECORATIVO, ESTOQUE_DECOR, ESTOQUE_ING, ESTOQUE, TORTA,
PEDIDO, COZINHEIRO, ATENDENTE, ENTREGADOR, FUNCIONARIO, CLIENTE;
CREATE TABLE CLIENTE (
ID_Cliente INTEGER,
nome VARCHAR(80),
endereco VARCHAR (80),
CPF CHAR(11),
PRIMARY KEY (ID_Cliente)
);

CREATE TABLE FUNCIONARIO (
ID_Funcionario INTEGER,
CPF VARCHAR (80),
nome VARCHAR (100),
PRIMARY KEY (ID_Funcionario)
);
CREATE TABLE ATENDENTE (
ID_FuncionarioAt INTEGER,
salario_hora DECIMAL,
turno VARCHAR (15),
telefone VARCHAR(10),
FOREIGN KEY (ID_FuncionarioAt) REFERENCES FUNCIONARIO (ID_Funcionario),
PRIMARY KEY (ID_FuncionarioAt)
);
CREATE TABLE ENTREGADOR (
ID_FuncionarioEnt INTEGER,
FOREIGN KEY (ID_FuncionarioEnt) REFERENCES FUNCIONARIO (ID_Funcionario) ON DELETE CASCADE ON UPDATE CASCADE,
PRIMARY KEY (ID_FuncionarioEnt),
salario_entrega INTEGER,
turno VARCHAR (15),
telefone VARCHAR (10),
dia VARCHAR (20)
);
CREATE TABLE COZINHEIRO (
ID_Funcionario INTEGER,
FOREIGN KEY (ID_Funcionario) REFERENCES FUNCIONARIO (ID_Funcionario) ON DELETE CASCADE ON UPDATE CASCADE,
PRIMARY KEY (ID_Funcionario),
salario INTEGER,
nivel VARCHAR (50),
bonificacao INTEGER
);

CREATE TABLE PEDIDO (
ID_Pedido INTEGER AUTO_INCREMENT,
data_pedido date,
descricao VARCHAR(100),
peso DECIMAL,
ID_FuncionarioEnt INTEGER,
ID_FuncionarioAt INTEGER,
ID_Cliente INTEGER,
PRIMARY KEY (ID_Pedido),
FOREIGN KEY (ID_FuncionarioAt) REFERENCES ATENDENTE(ID_FuncionarioAt),
FOREIGN KEY (ID_FuncionarioEnt) REFERENCES ENTREGADOR(ID_FuncionarioEnt),
FOREIGN KEY (ID_Cliente) REFERENCES CLIENTE(ID_Cliente)
);
CREATE TABLE TORTA (
ID_Torta INTEGER,
sabor VARCHAR (80),
preco_500gr DECIMAL,
ID_Pedido INTEGER,
PRIMARY KEY (ID_Torta),
FOREIGN KEY (ID_Pedido) REFERENCES PEDIDO (ID_Pedido)
);

CREATE TABLE ESTOQUE (
data_verificacao DATE,
categoria VARCHAR(100),
item INTEGER,
PRIMARY KEY (item)
);

CREATE TABLE ESTOQUE_ING(
Estoque_ing INTEGER,
quilos DECIMAL,
PRIMARY KEY (Estoque_ing),
FOREIGN KEY (Estoque_ing) REFERENCES ESTOQUE (item) ON UPDATE CASCADE ON DELETE CASCADE
); 
CREATE TABLE ESTOQUE_DECOR(
Estoque_decor INTEGER,
quantidade_pacotes INTEGER,
PRIMARY KEY (Estoque_decor),
FOREIGN KEY (Estoque_decor) REFERENCES ESTOQUE (item) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE ITEM_DECORATIVO (
ID_ItemDecor INTEGER AUTO_INCREMENT,
preco INTEGER,
nome VARCHAR (80),
ID_Torta INTEGER,
PRIMARY KEY (ID_ItemDecor),
FOREIGN KEY (ID_Torta) REFERENCES TORTA (ID_Torta),
FOREIGN KEY (ID_ItemDecor) REFERENCES ESTOQUE (item)
);

CREATE TABLE INGREDIENTE (
ID_Ingrediente INTEGER AUTO_INCREMENT,
nome VARCHAR (80),
preco INTEGER,
PRIMARY KEY (ID_Ingrediente),
ID_Torta INTEGER,
FOREIGN KEY (ID_Torta) REFERENCES TORTA (ID_Torta),
FOREIGN KEY (ID_Ingrediente) REFERENCES ESTOQUE (item)
);

 
CREATE TABLE COZINHEIRO_FAZ_TORTA(
ID_FuncionarioResp INTEGER,
ID_Torta INTEGER,
data_finalizacao DATE,
PRIMARY KEY (ID_FuncionarioResp, ID_Torta),
FOREIGN KEY (ID_FuncionarioResp) REFERENCES COZINHEIRO (ID_Funcionario),
FOREIGN KEY (ID_Torta) REFERENCES TORTA (ID_Torta)
);